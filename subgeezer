#!/bin/bash

usage="Usage: subgeezer [-hnbr] svn_root_url git_repository_path"
version="v1.4.0"
help="subgeezer SVN to Git converter (${version})

${usage}

Options:
  -h            Display help
  -n            Prompt for Git User <email> to convert SVN usernames in log
  -b            Do not convert branches (for svn2git --nobranches)
  -r            Root is trunk without tags and branches (for svn2git --rootistrunk)
  -v            Display version

Example: subgeezer -nb http://swfobject.googlecode.com/svn ~/swfObject.git"

err[1]="Invalid command"
err[2]="SVN client is required"
err[3]="Git client is required"
err[4]="svn2git is required.
Install with: gem install svn2git
For more see https://github.com/nirvdrum/svn2git"

# Check for SVN client
if [ -z `which svn` ]
then
  echo "${err[2]}, exiting..."
  exit 2
fi

# Check for Git client
if [ -z `which git` ]
then
  echo "${err[3]}, exiting..."
  exit 3
fi

# Check for svn2git
if [ -z `which svn2git` ]
then
  echo "${err[4]}, exiting..."
  exit 4
fi

# Check for command formatting exceptions
if [[ -z "$@" ]]
then
  echo "${err[1]}"
  echo "${usage}"
  exit 1
elif [[ "$#" < 2 && $1 != "-h" && $1 != "-v" ]]
then
  echo "${err[1]}"
  echo "${usage}"
  exit 1
fi

prompt_author=false
branches=""
trunk="trunk"
tags=""

# Parse command arguments
while getopts "hvnbr" flag
do
  case "$flag" in
    h)
      echo "${help}"
      exit 0
      ;;
    v)
      echo "${version}"
      exit 0
      ;;
    r)
        # --rootistrunk not used due to https://github.com/nirvdrum/svn2git/issues/127
        trunk="/"
      ;;
    n)
      prompt_author=true
      ;;
    b)
      branches="--nobranches"
      ;;
  esac
done

if [[ $trunk == "/" ]]
then
  branches="--nobranches"
  tags="--notags"
fi

if [ "$#" == 2 ]
then
  svn_repo=$1
  git_repo=$2
else
  svn_repo=$2
  git_repo=$3
fi

# Ensure temp folder exists
test -d ~/temp || mkdir -p ~/temp
cd ~/temp

# Fetch and convert credentials in the log
while read line; do
  authors=`awk -F '|' '/^r/ {sub("^ ", "", $2); sub(" $", "", $2); print $2";"}' | sort -u`
done < <(svn log -q $svn_repo)

if $prompt_author;
then
  echo "Starting credential conversion from 'username' to 'Forename Surname <email@address.com>'"
  echo "Entering empty values will cause a fallback to 'username <username>'"
else
  echo "No credential conversion, falling back to 'username <username>'"
fi

touch ~/temp/authors.txt
cat /dev/null > ~/temp/authors.txt

OIFS=$IFS
IFS=";"
for author in $authors
do
  trimmed_author=`echo -n $author | tr -d "\n"`
  if $prompt_author;
  then
    echo "Please define Git info for user $trimmed_author: "
    read -p "Forename: " forename
    read -p "Surname: " surname
    read -p "Email: " email
  fi
  echo "$trimmed_author = ${forename:-$trimmed_author} ${surname} <${email:-$trimmed_author}>" >> ~/temp/authors.txt
done

test -d $git_repo || mkdir -p $git_repo
cd $git_repo
svn2git $svn_repo --verbose --authors ~/temp/authors.txt --no-minimize-url --trunk $trunk $branches $tags

# Set newly created repository to bare repository
git config --bool core.bare true

echo "Conversion completed."
exit 0
